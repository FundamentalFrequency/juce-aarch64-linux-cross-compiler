// source: layer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.variations.Layer');
goog.provide('proto.variations.Layer.EntropyMode');
goog.provide('proto.variations.Layer.LayerMember');
goog.provide('proto.variations.Layer.LayerMember.SlotRange');
goog.provide('proto.variations.LayerMemberReference');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.variations.Layer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.variations.Layer.repeatedFields_, null);
};
goog.inherits(proto.variations.Layer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.variations.Layer.displayName = 'proto.variations.Layer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.variations.Layer.LayerMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.variations.Layer.LayerMember.repeatedFields_, null);
};
goog.inherits(proto.variations.Layer.LayerMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.variations.Layer.LayerMember.displayName = 'proto.variations.Layer.LayerMember';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.variations.Layer.LayerMember.SlotRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.variations.Layer.LayerMember.SlotRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.variations.Layer.LayerMember.SlotRange.displayName = 'proto.variations.Layer.LayerMember.SlotRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.variations.LayerMemberReference = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.variations.LayerMemberReference, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.variations.LayerMemberReference.displayName = 'proto.variations.LayerMemberReference';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.variations.Layer.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.variations.Layer.prototype.toObject = function(opt_includeInstance) {
  return proto.variations.Layer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.variations.Layer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    numSlots: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    membersList: jspb.Message.toObjectList(msg.getMembersList(),
    proto.variations.Layer.LayerMember.toObject, includeInstance),
    salt: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    entropyMode: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.variations.Layer}
 */
proto.variations.Layer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.variations.Layer;
  return proto.variations.Layer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.variations.Layer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.variations.Layer}
 */
proto.variations.Layer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumSlots(value);
      break;
    case 3:
      var value = new proto.variations.Layer.LayerMember;
      reader.readMessage(value,proto.variations.Layer.LayerMember.deserializeBinaryFromReader);
      msg.addMembers(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSalt(value);
      break;
    case 5:
      var value = /** @type {!proto.variations.Layer.EntropyMode} */ (reader.readEnum());
      msg.setEntropyMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.variations.Layer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.variations.Layer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.variations.Layer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMembersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.variations.Layer.LayerMember.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {!proto.variations.Layer.EntropyMode} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.variations.Layer.EntropyMode = {
  DEFAULT: 0,
  LOW: 1
};


/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.variations.Layer.LayerMember.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.variations.Layer.LayerMember.prototype.toObject = function(opt_includeInstance) {
  return proto.variations.Layer.LayerMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.variations.Layer.LayerMember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.LayerMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    slotsList: jspb.Message.toObjectList(msg.getSlotsList(),
    proto.variations.Layer.LayerMember.SlotRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.variations.Layer.LayerMember}
 */
proto.variations.Layer.LayerMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.variations.Layer.LayerMember;
  return proto.variations.Layer.LayerMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.variations.Layer.LayerMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.variations.Layer.LayerMember}
 */
proto.variations.Layer.LayerMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.variations.Layer.LayerMember.SlotRange;
      reader.readMessage(value,proto.variations.Layer.LayerMember.SlotRange.deserializeBinaryFromReader);
      msg.addSlots(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.variations.Layer.LayerMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.variations.Layer.LayerMember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.variations.Layer.LayerMember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.LayerMember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSlotsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.variations.Layer.LayerMember.SlotRange.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.toObject = function(opt_includeInstance) {
  return proto.variations.Layer.LayerMember.SlotRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.variations.Layer.LayerMember.SlotRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.LayerMember.SlotRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    end: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.variations.Layer.LayerMember.SlotRange}
 */
proto.variations.Layer.LayerMember.SlotRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.variations.Layer.LayerMember.SlotRange;
  return proto.variations.Layer.LayerMember.SlotRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.variations.Layer.LayerMember.SlotRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.variations.Layer.LayerMember.SlotRange}
 */
proto.variations.Layer.LayerMember.SlotRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.variations.Layer.LayerMember.SlotRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.variations.Layer.LayerMember.SlotRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.Layer.LayerMember.SlotRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 start = 1;
 * @return {number}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer.LayerMember.SlotRange} returns this
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.setStart = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer.LayerMember.SlotRange} returns this
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.clearStart = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.hasStart = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 end = 2;
 * @return {number}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.getEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer.LayerMember.SlotRange} returns this
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.setEnd = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer.LayerMember.SlotRange} returns this
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.clearEnd = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.LayerMember.SlotRange.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.variations.Layer.LayerMember.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer.LayerMember} returns this
 */
proto.variations.Layer.LayerMember.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer.LayerMember} returns this
 */
proto.variations.Layer.LayerMember.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.LayerMember.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated SlotRange slots = 2;
 * @return {!Array<!proto.variations.Layer.LayerMember.SlotRange>}
 */
proto.variations.Layer.LayerMember.prototype.getSlotsList = function() {
  return /** @type{!Array<!proto.variations.Layer.LayerMember.SlotRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.variations.Layer.LayerMember.SlotRange, 2));
};


/**
 * @param {!Array<!proto.variations.Layer.LayerMember.SlotRange>} value
 * @return {!proto.variations.Layer.LayerMember} returns this
*/
proto.variations.Layer.LayerMember.prototype.setSlotsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.variations.Layer.LayerMember.SlotRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.variations.Layer.LayerMember.SlotRange}
 */
proto.variations.Layer.LayerMember.prototype.addSlots = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.variations.Layer.LayerMember.SlotRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.variations.Layer.LayerMember} returns this
 */
proto.variations.Layer.LayerMember.prototype.clearSlotsList = function() {
  return this.setSlotsList([]);
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.variations.Layer.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 num_slots = 2;
 * @return {number}
 */
proto.variations.Layer.prototype.getNumSlots = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.setNumSlots = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.clearNumSlots = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.prototype.hasNumSlots = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated LayerMember members = 3;
 * @return {!Array<!proto.variations.Layer.LayerMember>}
 */
proto.variations.Layer.prototype.getMembersList = function() {
  return /** @type{!Array<!proto.variations.Layer.LayerMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.variations.Layer.LayerMember, 3));
};


/**
 * @param {!Array<!proto.variations.Layer.LayerMember>} value
 * @return {!proto.variations.Layer} returns this
*/
proto.variations.Layer.prototype.setMembersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.variations.Layer.LayerMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.variations.Layer.LayerMember}
 */
proto.variations.Layer.prototype.addMembers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.variations.Layer.LayerMember, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.clearMembersList = function() {
  return this.setMembersList([]);
};


/**
 * optional uint32 salt = 4;
 * @return {number}
 */
proto.variations.Layer.prototype.getSalt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.setSalt = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.clearSalt = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.prototype.hasSalt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional EntropyMode entropy_mode = 5;
 * @return {!proto.variations.Layer.EntropyMode}
 */
proto.variations.Layer.prototype.getEntropyMode = function() {
  return /** @type {!proto.variations.Layer.EntropyMode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.variations.Layer.EntropyMode} value
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.setEntropyMode = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.Layer} returns this
 */
proto.variations.Layer.prototype.clearEntropyMode = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.Layer.prototype.hasEntropyMode = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.variations.LayerMemberReference.prototype.toObject = function(opt_includeInstance) {
  return proto.variations.LayerMemberReference.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.variations.LayerMemberReference} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.LayerMemberReference.toObject = function(includeInstance, msg) {
  var f, obj = {
    layerId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    layerMemberId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.variations.LayerMemberReference}
 */
proto.variations.LayerMemberReference.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.variations.LayerMemberReference;
  return proto.variations.LayerMemberReference.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.variations.LayerMemberReference} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.variations.LayerMemberReference}
 */
proto.variations.LayerMemberReference.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLayerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLayerMemberId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.variations.LayerMemberReference.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.variations.LayerMemberReference.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.variations.LayerMemberReference} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.variations.LayerMemberReference.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 layer_id = 1;
 * @return {number}
 */
proto.variations.LayerMemberReference.prototype.getLayerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.LayerMemberReference} returns this
 */
proto.variations.LayerMemberReference.prototype.setLayerId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.LayerMemberReference} returns this
 */
proto.variations.LayerMemberReference.prototype.clearLayerId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.LayerMemberReference.prototype.hasLayerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 layer_member_id = 2;
 * @return {number}
 */
proto.variations.LayerMemberReference.prototype.getLayerMemberId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.variations.LayerMemberReference} returns this
 */
proto.variations.LayerMemberReference.prototype.setLayerMemberId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.variations.LayerMemberReference} returns this
 */
proto.variations.LayerMemberReference.prototype.clearLayerMemberId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.variations.LayerMemberReference.prototype.hasLayerMemberId = function() {
  return jspb.Message.getField(this, 2) != null;
};


